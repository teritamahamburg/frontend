# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type CSV {
    columns: [String!]!
    rows: String!
}

type Course {
    id: ID!
    name: String!
}

type HistoryItem {
    checkedAt: Date
    createdAt: DateTime!
    depreciationAt: Date
    disposalAt: Date
    editUser: User!
    id: ID!
    room: Room
}

type Item {
    amount: Int!
    checkedAt: Date
    code: String!
    course: Course!
    createdAt: DateTime!
    deletedAt: DateTime
    depreciationAt: Date
    disposalAt: Date
    editUser: User!
    histories: [HistoryItem!]!
    id: ID!
    internalId: ID!
    name: String!
    partId: ID!
    parts: [PartItem!]!
    purchasedAt: Date!
    room: Room!
    schoolName: String!
    seal: String
    user: User!
}

type ItemResult {
    item: Item!
    message: String
    success: Boolean!
}

type Mutation {
    addItem(data: ItemInput!): ItemResult!
    addPart(data: PartItemInput!, internalId: ID!): ItemResult!
    editItem(data: EditItemInput!, id: ID!): Result!
    editItems(data: EditItemInput!, ids: [ID!]!): Result!
    editPart(data: PartItemInput!, id: ID!): Result!
    removeItems(ids: [ID!]!): Result!
    restoreItem(id: ID!): Result!
}

type PartItem {
    checkedAt: Date
    editUser: User!
    id: ID!
    internalId: String!
    name: String!
    partId: String!
    room: Room!
}

type Query {
    csv(paranoid: Boolean = false): CSV!
    item(id: ID!): Item
    items(itemEnum: ItemEnum = NORMAL, search: String, sort: [[String!]!] = [["id", "asc"]]): [Item!]!
}

type Result {
    message: String
    success: Boolean!
}

type Room {
    id: ID!
    number: Int!
}

type User {
    id: ID!
    name: String!
}

enum CacheControlScope {
    PRIVATE
    PUBLIC
}

enum ItemEnum {
    ALL
    NORMAL
    ONLY_DELETED
}

input EditItemInput {
    checkedAt: Date
    depreciationAt: Date
    disposalAt: Date
    editUser: String!
    room: Int
}

input ItemInput {
    amount: Int = 1
    checkedAt: Date
    code: String!
    course: String!
    createdAt: DateTime
    depreciationAt: Date
    disposalAt: Date
    editUser: String!
    name: String!
    purchasedAt: Date!
    room: Int!
    schoolName: String = "ss"
    sealImage: Upload
    user: String!
}

input PartItemInput {
    checkedAt: Date
    createdAt: DateTime
    editUser: String!
    name: String
    room: Int
}


"A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar DateTime

"The `Upload` scalar type represents a file upload."
scalar Upload

"A time string at UTC, such as 10:15:30Z, compliant with the `full-time` format outlined in section 5.6 of the RFC 3339profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Time
